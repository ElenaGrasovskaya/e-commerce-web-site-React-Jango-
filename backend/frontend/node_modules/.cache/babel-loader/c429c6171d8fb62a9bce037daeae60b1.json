{"ast":null,"code":"var _jsxFileName = \"H:\\\\STUDY\\\\e-commerce-web-site(React+Jango)\\\\frontend\\\\src\\\\screens\\\\ShippingScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckOutSteps from \"../components/CheckOutSteps\";\nimport { saveShippingAddress } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShippingScreen() {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      address,\n      city,\n      postalCode,\n      country\n    }));\n    navigate('/payment/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CheckOutSteps, {\n      step1: true,\n      step2: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shipping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        cntrolid: \"address\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter address\",\n          value: address ? address : \"\",\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        cntrolid: \"city\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter city\",\n          value: city ? city : \"\",\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        cntrolid: \"postalCode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Postal code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter postal code\",\n          value: postalCode ? postalCode : \"\",\n          onChange: e => setPostalCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        cntrolid: \"country\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Coutry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter country\",\n          value: country ? country : \"\",\n          onChange: e => setCountry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"my-3\",\n        type: \"submit\",\n        variant: \"primary\",\n        onSubmit: submitHandler,\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), \"Shipping\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShippingScreen, \"uSaVEqiuVmkXHzgqxbdLsn1qj7w=\", false, function () {\n  return [useSelector, useNavigate, useDispatch];\n});\n\n_c = ShippingScreen;\nexport default ShippingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"sources":["H:/STUDY/e-commerce-web-site(React+Jango)/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","useEffect","Link","useLocation","useNavigate","Form","Button","Row","Col","useDispatch","useSelector","FormContainer","CheckOutSteps","saveShippingAddress","ShippingScreen","cart","state","shippingAddress","navigate","dispatch","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckOutSteps from \"../components/CheckOutSteps\";\r\nimport {saveShippingAddress} from '../actions/cartActions';\r\n\r\n\r\nfunction ShippingScreen() {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n  const navigate = useNavigate();\r\n\r\n  const dispatch = useDispatch(); \r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({address, city, postalCode, country}));\r\n    navigate('/payment/');\r\n\r\n  }; \r\n  return (\r\n    <FormContainer>\r\n        <CheckOutSteps step1 step2/>\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group cntrolid=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter address\"\r\n            value={address ? address : \"\"}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group cntrolid=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter city\"\r\n            value={city ? city : \"\"}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group cntrolid=\"postalCode\">\r\n          <Form.Label>Postal code</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter postal code\"\r\n            value={postalCode ? postalCode : \"\"}\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group cntrolid=\"country\">\r\n          <Form.Label>Coutry</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter country\"\r\n            value={country ? country : \"\"}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button\r\n          className=\"my-3\"\r\n          type=\"submit\"\r\n          variant=\"primary\"\r\n          onSubmit={submitHandler}\r\n        >\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n      Shipping\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default ShippingScreen;\r\n"]},"metadata":{},"sourceType":"module"}