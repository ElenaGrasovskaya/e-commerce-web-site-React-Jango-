{"ast":null,"code":"var _jsxFileName = \"H:\\\\STUDY\\\\e-commerce-web-site(React+Jango)\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\"; //import { LinkContainer } from \"react-router-bootstrap\";\n\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { applyMiddleware } from \"redux\";\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\nimport { listMyOrders } from \"../actions/orderActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileScreen() {\n  _s();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const userDetails = useSelector(state => state.userDetails);\n  let {\n    error,\n    loading,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = orderListMy;\n  useEffect(() => {\n    if (!userInfo) {\n      navigate(\"/login\");\n    } else {\n      if (!user || !user.name || success || userInfo._id !== user._id) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(userInfo.name);\n        setEmail(userInfo.email);\n      }\n    }\n  }, [userInfo, dispatch, user, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name: name,\n        email: email,\n        password: password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          cntrolid: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          cntrolid: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          cntrolid: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          cntrolid: \"passwordConfirm\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"confirmPassword\",\n            placeholder: \"Confirm Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"my-3\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), loadingOrders ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this) : errorOrders ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        responsive: true,\n        className: \"table-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileScreen, \"/0JRdVNpgFQZTBV31XFU9h8OO4Q=\", false, function () {\n  return [useDispatch, useLocation, useNavigate, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["H:/STUDY/e-commerce-web-site(React+Jango)/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Link","useLocation","useNavigate","Form","Button","Row","Col","Table","useDispatch","useSelector","Loader","Message","getUserDetails","updateUserProfile","applyMiddleware","USER_UPDATE_PROFILE_RESET","listMyOrders","ProfileScreen","dispatch","location","navigate","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","userDetails","state","error","loading","user","userLogin","userInfo","userUpdateProfile","success","orderListMy","loadingOrders","errorOrders","orders","_id","type","submitHandler","e","preventDefault","id","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\n//import { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { applyMiddleware } from \"redux\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\n\r\nfunction ProfileScreen() {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  let { error, loading, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success || userInfo._id !== user._id) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(userInfo.name);\r\n        setEmail(userInfo.email);\r\n      }\r\n    }\r\n  }, [userInfo, dispatch, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password != confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          name: name,\r\n          email: email,\r\n          password: password,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={4}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"success\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n\r\n        {loading && <Loader />}\r\n\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group cntrolid=\"name\">\r\n            <Form.Label>Enter Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group cntrolid=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group cntrolid=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group cntrolid=\"passwordConfirm\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"confirmPassword\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\" className=\"my-3\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={8}>\r\n        <h2>My orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Paid</th>\r\n                <th>Delivered</th>\r\n              </tr>\r\n            </thead>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n"]},"metadata":{},"sourceType":"module"}