{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from \"./reducers/userReducers\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from \"./reducers/orderReducers\";\nconst reducer = combineReducers({\n  productlist: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["H:/STUDY/e-commerce-web-site(React+Jango)/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","reducer","productlist","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","productTopRatedReducer","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,0BANF,QAQO,4BARP;AASA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,kBAAhD,EAAoEC,wBAApE,EAA8FC,eAA9F,EAA+GC,iBAA/G,EACEC,iBADF,QAC0B,yBAD1B;AAEA,SAASC,kBAAT,EAA6BC,mBAA7B,EACGC,eADH,EACoBC,kBADpB,EAEIC,gBAFJ,EAEsBC,mBAFtB,QAEiD,0BAFjD;AAKA,MAAMC,OAAO,GAAGxB,eAAe,CAAC;AAC9ByB,EAAAA,WAAW,EAAErB,kBADiB;AAE9BsB,EAAAA,cAAc,EAAErB,qBAFc;AAG9BsB,EAAAA,aAAa,EAAErB,oBAHe;AAI9BsB,EAAAA,aAAa,EAAErB,oBAJe;AAK9BsB,EAAAA,aAAa,EAAErB,oBALe;AAM9BsB,EAAAA,mBAAmB,EAAErB,0BANS;AAO9BsB,EAAAA,eAAe,EAAEC,sBAPa;AAQ9BC,EAAAA,IAAI,EAAEvB,WARwB;AAS9BwB,EAAAA,SAAS,EAAEvB,gBATmB;AAU9BwB,EAAAA,YAAY,EAAEvB,mBAVgB;AAW9BwB,EAAAA,WAAW,EAAEvB,kBAXiB;AAY9BwB,EAAAA,iBAAiB,EAAEvB,wBAZW;AAa9BwB,EAAAA,QAAQ,EAAEvB,eAboB;AAc9BwB,EAAAA,UAAU,EAAEvB,iBAdkB;AAe9BwB,EAAAA,UAAU,EAAEvB,iBAfkB;AAgB9BwB,EAAAA,WAAW,EAAEvB,kBAhBiB;AAiB9BwB,EAAAA,YAAY,EAAEvB,mBAjBgB;AAkB9BwB,EAAAA,QAAQ,EAAEvB,eAlBoB;AAmB9BwB,EAAAA,YAAY,EAAErB,mBAnBgB;AAoB9BsB,EAAAA,WAAW,EAAExB,kBApBiB;AAqB9ByB,EAAAA,SAAS,EAAExB;AArBmB,CAAD,CAA/B;AAyBA,MAAMyB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIE,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACjCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADiC,GAEjC,EAFF;AAIF,MAAMK,YAAY,GAAG;AACnBrB,EAAAA,IAAI,EAAE;AAAEsB,IAAAA,SAAS,EAAER,oBAAb;AACES,IAAAA,eAAe,EAACH;AADlB,GADa;AAGnBnB,EAAAA,SAAS,EAAE;AAACuB,IAAAA,QAAQ,EAAEL;AAAX;AAHQ,CAArB;AAMA,MAAMM,UAAU,GAAG,CAACxD,KAAD,CAAnB;AAEA,MAAMyD,KAAK,GAAG5D,WAAW,CACvByB,OADuB,EAEvB8B,YAFuB,EAGvBnD,mBAAmB,CAACF,eAAe,CAAC,GAAGyD,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer, \r\n\r\n} from \"./reducers/productReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer,\r\n  userUpdateReducer} from \"./reducers/userReducers\";\r\nimport { orderCreateReducer, orderDetailsReducer,\r\n   orderPayReducer, orderListMyReducer,\r\n    orderListReducer, orderDeliverReducer } from \"./reducers/orderReducers\";\r\n\r\n\r\nconst reducer = combineReducers({\r\n  productlist: productListReducer,\r\n  productDetails: productDetailsReducer, \r\n  productDelete: productDeleteReducer, \r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer, \r\n  userUpdateProfile: userUpdateProfileReducer, \r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  \r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\n  const shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: { cartItems: cartItemsFromStorage,\r\n          shippingAddress:shippingAddressFromStorage,  },\r\n  userLogin: {userInfo: userInfoFromStorage}\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}