{"ast":null,"code":"import _slicedToArray from\"H:/STUDY/e-commerce-web-site(React+Jango)/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Link,useLocation,useNavigate}from\"react-router-dom\";import{Form,Button,Row,Col}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import Loader from\"../components/Loader\";import Message from\"../components/Message\";import FormContainer from\"../components/FormContainer\";import{useParams}from\"react-router\";import{USER_UPDATE_RESET}from\"../constants/userConstants\";import{getUserDetails,register,updateUser}from\"../actions/userActions\";import{applyMiddleware}from\"redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function UserEditScreen(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isAdmin=_useState6[0],setIsAdmin=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];var dispatch=useDispatch();var location=useLocation();var navigate=useNavigate();var _useParams=useParams(),id=_useParams.id;var userDetails=useSelector(function(state){return state.userDetails;});var error=userDetails.error,loading=userDetails.loading,user=userDetails.user;var userUpdate=useSelector(function(state){return state.userUpdate;});var errorUpdate=userUpdate.error,loadingUpdate=userUpdate.loading,successUpdate=userUpdate.success;useEffect(function(){if(successUpdate){dispatch({type:USER_UPDATE_RESET});navigate(\"/admin/userlist\");}else{if(!user.name||user._id!==Number(id)){dispatch(getUserDetails(id));}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}}},[user,id,successUpdate,navigate]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateUser({_id:user._id,name:name,email:email,isAdmin:isAdmin}));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/userlist\",children:\"Go Back\"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Edit User\"}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Enter Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter Name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter Email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"checkbox\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Is Admin\"}),/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Is Admin\",checked:isAdmin,onChange:function onChange(e){return setIsAdmin(e.target.checked);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",className:\"my-3\",children:\"Update\"})]})]})]});}export default UserEditScreen;","map":{"version":3,"sources":["H:/STUDY/e-commerce-web-site(React+Jango)/backend/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Link","useLocation","useNavigate","Form","Button","Row","Col","useDispatch","useSelector","Loader","Message","FormContainer","useParams","USER_UPDATE_RESET","getUserDetails","register","updateUser","applyMiddleware","UserEditScreen","name","setName","email","setEmail","isAdmin","setIsAdmin","message","setMessage","dispatch","location","navigate","id","userDetails","state","error","loading","user","userUpdate","errorUpdate","loadingUpdate","successUpdate","success","type","_id","Number","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useParams } from \"react-router\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nimport { getUserDetails, register, updateUser } from \"../actions/userActions\";\r\nimport { applyMiddleware } from \"redux\";\r\n\r\nfunction UserEditScreen() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      navigate(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.name || user._id !== Number(id)) {\r\n        dispatch(getUserDetails(id));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [user, id, successUpdate, navigate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({_id:user._id, name, email, isAdmin}));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/userlist\">Go Back</Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Enter Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"checkbox\">\r\n              <Form.Label>Is Admin</Form.Label>\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\" className=\"my-3\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}