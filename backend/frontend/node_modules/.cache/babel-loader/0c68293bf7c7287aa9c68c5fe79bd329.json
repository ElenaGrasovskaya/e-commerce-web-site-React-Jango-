{"ast":null,"code":"import { CART_ADD_ITEM } from '../constants/cartConstants';\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["H:/STUDY/e-commerce-web-site(React+Jango)/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;AAOA,OAAO,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzB;AAACC,IAAAA,SAAS,EAAC;AAAX,GAAyB;AAAA,MAATC,MAAS;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,aAAL;AACI,YAAMM,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAGA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA5C,CAAlB;;AACA,UAAGH,SAAH,EAAc;AACV,eAAM,EACF,GAAGN,KADD;AAEDC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAYH,SAAS,CAACG,OAAtB,GAA+BL,IAA/B,GAAsCI,CAA/D;AAFV,SAAN;AAKH,OAND,MAQA;AACI,eAAM,EACF,GAAGR,KADD;AAEFC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAFT,SAAN;AAKH;;AAIL;AACA,aAAOJ,KAAP;AAvBJ;AAyBH,CA1BM","sourcesContent":["import { CART_ADD_ITEM } from '../constants/cartConstants';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const cartReducer = (state = {cartItems:[]}, action)=>{\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n            const existItem = state.cartItems.find(x=> x.product === item.product)\r\n            if(existItem) {\r\n                return{\r\n                    ...state, \r\n                     cartItems: state.cartItems.map(x => x.product===existItem.product? item : x)\r\n                }\r\n\r\n            }\r\n            else \r\n            {\r\n                return{\r\n                    ...state, \r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n\r\n            }\r\n \r\n\r\n\r\n        default: \r\n        return state\r\n    } \r\n}"]},"metadata":{},"sourceType":"module"}